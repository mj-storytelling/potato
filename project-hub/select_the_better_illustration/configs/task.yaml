{
    "port": 8080,
    "__debug___": true,

    "server_name": "potato annotator",

    "annotation_task_name": "Story Visualization",

    # Potato will write the annotation file for all annotations to this
    # directory, as well as per-annotator output files and state information
    # necessary to restart annotation.
    "output_annotation_dir": "annotation_output/",

    # The output format for the all-annotator data. Allowed formats are:
    # * jsonl
    # * json (same output as jsonl)
    # * csv
    # * tsv
    #
    "output_annotation_format": "jsonl", 

    # If annotators are using a codebook, this will be linked at the top to the
    # instance for easy access
    "annotation_codebook_url": "",

    "data_files": [
       "data_files/illustration_pairs.jsonl"
    ],

    "item_properties": {
        "id_key": "id",
        "text_key": "text",
    },

    "login": {
       "type": 'url_direct',    #can be 'password' or 'url_direct'
       "url_argument": ['PROLIFIC_PID', 'STUDY_ID', 'SESSION_ID'] # when the login type is set to 'url_direct', 'url_argument' must be setup for a direct url argument login
    },

    # define the surveyflow of the system, set up the pages before and after the data annotation page
    "surveyflow": {
      "on": True,
      "order" : ['pre_annotation', 'post_annotation'],
      "pre_annotation": ['surveyflow/introduction.jsonl'],
      "post_annotation": ['surveyflow/end.jsonl'],
      # If set, we will automatically generate testing questions similar to the annotation instances, but explicitly ask the annotator to choose one option
      "testing": [],
    },

    "automatic_assignment": {
        "on": False, #whether do automatic task assignment for annotators, default False.
        "output_filename": 'task_assignment.json', #no need to change
        "sampling_strategy": 'random', #currently we support random assignment or ordered assignment. Use 'random' for random assignment and 'ordered' for ordered assignment
        "labels_per_instance": 2,  #the number of labels for each instance
        "instance_per_annotator": 150, #the total amount of instances to be assigned to each annotator
        "test_question_per_annotator": 2, # the number of attention test question to be inserted into the annotation queue. you must set up the test question in surveyflow to use this function
    },

    "user_config": {
      "allow_all_users": True,
      "users": [],
      "users_to_drop": []
    },

    # How many seconds do you want the annotators spend on each instance, after
    # that, an alert will be sent per alert_time_each_instance seconds.
    "alert_time_each_instance": 10000000,

    "jumping_to_id_disabled": True,
    "hide_navbar": True,

    "annotation_schemes": [ 
        {
            "annotation_type": "radio",
            "horizontal": True,
            "name": "Story Visualization",
            "image_as_label": True,
            "description": "Read the entire story above. Which image is a better illustration of the underlined fragment?",
            "label_requirement": { "required": True },

            # Files http://[server]:[port]/data/* will be forwarded from directory data/files/*
            "labels": [
               {"name": "illustration1", "imagepath": "data_files/images/{{instance_obj['illustration1']['file']}}"},
               {"name": "illustration2", "imagepath": "data_files/images/{{instance_obj['illustration2']['file']}}"},
               {"name": "no-preference", "text": "I can't decide which image is better"}
            ],

            # If true, numbers [1-len(labels)] will be bound to each
            # label. Check box annotations with more than 10 are not supported
            # with this simple keybinding and will need to use the full item
            # specification to bind all labels to keys.
            "sequential_key_binding": True,            
        },       
    ],

    # The html that changes the visualiztation for your task. Change this file
    # to influence the layout and description of your task. This is not a full
    # HTML page, just the piece that does lays out your task's pieces
    # you may use templates in our lib, if you want to use your own template,
    # please replace the string as a path to the template
    "html_layout": "default",

    # The core UI files for Potato. You should not need to change these normally.
    #
    # Exceptions to this might include:
    # 1) You want to add custom CSS/fonts to style your task
    # 2) Your layout requires additional JS/assets to render
    # 3) You want to support additional keybinding magic
    #
    # if you want to use your own template,
    # please replace the string as a path to the template
    "base_html_template": "default",
    "header_file": "default",

    # This is where the actual HTML files will be generated
    "site_dir": "default"

}
